using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named AuditFactRepo.cs
namespace ESC2.Module.System.Data.Repos.Warehouse
{
    public partial class AuditFactRepo : AbstractDataRepo<ESC2.Module.System.Data.DataObjects.Warehouse.AuditFact, Int32>
    {
        public AuditFactRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "warehouse";
        public override string TableName => "audit_fact";

        public override string InsertSql => @"
            INSERT INTO [warehouse].[audit_fact] (
                [warehouse].[audit_fact].[audit_id],
                [warehouse].[audit_fact].[asset_id],
                [warehouse].[audit_fact].[implementation_guide_id],
                [warehouse].[audit_fact].[employee_id],
                [warehouse].[audit_fact].[started_on_period_id],
                [warehouse].[audit_fact].[completed_on_period_id],
                [warehouse].[audit_fact].[hours_to_complete])
            VALUES ( 
                @AuditId,
                @AssetId,
                @ImplementationGuideId,
                @EmployeeId,
                @StartedOnPeriodId,
                @CompletedOnPeriodId,
                @HoursToComplete) ";

        public override string UpdateSql => @"
            UPDATE [warehouse].[audit_fact] 
            SET [warehouse].[audit_fact].[audit_id]=@AuditId,
                [warehouse].[audit_fact].[asset_id]=@AssetId,
                [warehouse].[audit_fact].[implementation_guide_id]=@ImplementationGuideId,
                [warehouse].[audit_fact].[employee_id]=@EmployeeId,
                [warehouse].[audit_fact].[started_on_period_id]=@StartedOnPeriodId,
                [warehouse].[audit_fact].[completed_on_period_id]=@CompletedOnPeriodId,
                [warehouse].[audit_fact].[hours_to_complete]=@HoursToComplete
            WHERE [warehouse].[audit_fact].[audit_fact_id]=@Id ";

        public override string SelectSql => @"
            SELECT [warehouse].[audit_fact].[audit_fact_id],
                   [warehouse].[audit_fact].[audit_id],
                   [warehouse].[audit_fact].[asset_id],
                   [warehouse].[audit_fact].[implementation_guide_id],
                   [warehouse].[audit_fact].[employee_id],
                   [warehouse].[audit_fact].[started_on_period_id],
                   [warehouse].[audit_fact].[completed_on_period_id],
                   [warehouse].[audit_fact].[hours_to_complete]
            FROM [warehouse].[audit_fact] ";

        public override string DeleteSql => @"DELETE FROM [warehouse].[audit_fact] WHERE [warehouse].[audit_fact].[audit_fact_id] = @Id";

        public override string GetByIdSql => $@"{SelectSql} WHERE [warehouse].[audit_fact].[audit_fact_id = @Id";
        public override ESC2.Module.System.Data.DataObjects.Warehouse.AuditFact ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.Warehouse.AuditFact();
            obj.Id = row.GetInt("audit_fact_id");
            obj.AuditId = row.GetGuid("audit_id");
            obj.AssetId = row.GetGuid("asset_id");
            obj.ImplementationGuideId = row.GetGuid("implementation_guide_id");
            obj.EmployeeId = row.GetGuid("employee_id");
            obj.StartedOnPeriodId = row.GetInt("started_on_period_id");
            obj.CompletedOnPeriodId = row.GetInt("completed_on_period_id");
            obj.HoursToComplete = row.GetDouble("hours_to_complete");
            return obj;
        }

        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.Warehouse.AuditFact obj)
        {
            List<DbQueryParameter> parameters = new List<DbQueryParameter>();
            parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("AuditId", obj.AuditId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("AssetId", obj.AssetId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("ImplementationGuideId", obj.ImplementationGuideId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("EmployeeId", obj.EmployeeId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("StartedOnPeriodId", obj.StartedOnPeriodId, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("CompletedOnPeriodId", obj.CompletedOnPeriodId, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("HoursToComplete", obj.HoursToComplete, DbQueryParameterType.Double));

            return parameters;
        }
    }
}
