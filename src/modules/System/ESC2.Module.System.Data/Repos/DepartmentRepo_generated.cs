using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named DepartmentRepo.cs
namespace ESC2.Module.System.Data.Repos
{
    public partial class DepartmentRepo : AbstractGuidRepo<ESC2.Module.System.Data.DataObjects.Department>
    {
        public DepartmentRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "dbo";
        public override string TableName => "department";

        public override string InsertSql => @"
            INSERT INTO [dbo].[department] (
                [dbo].[department].[DepartmentId],
                [dbo].[department].[Name])
            VALUES ( 
                @Id,
                @Name) ";

        public override string UpdateSql => @"
            UPDATE [dbo].[department] 
            SET [dbo].[department].[name]=@Name
            WHERE [dbo].[department].[department_id]=@Id ";

        public override string SelectSql => @"
            SELECT [dbo].[department].[department_id],
                   [dbo].[department].[name]
            FROM [dbo].[department] ";

        public override ESC2.Module.System.Data.DataObjects.Department ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.Department();
            obj.Id = row.GetGuid("department_id");
            obj.Name = row.GetString("name");
            return obj;
        }


        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.Department obj)
         {
             List<DbQueryParameter> parameters = new List<DbQueryParameter>();
             parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
             parameters.Add(new DbQueryParameter("Name", obj.Name, DbQueryParameterType.String));

             return parameters;
         }


    }
}
