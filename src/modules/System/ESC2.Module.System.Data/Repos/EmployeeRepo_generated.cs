using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named EmployeeRepo.cs
namespace ESC2.Module.System.Data.Repos
{
    public partial class EmployeeRepo : AbstractGuidRepo<ESC2.Module.System.Data.DataObjects.Employee>
    {
        public EmployeeRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "dbo";
        public override string TableName => "employee";

        public override string InsertSql => @"
            INSERT INTO [dbo].[employee] (
                [dbo].[employee].[employee_id],
                [dbo].[employee].[given_name],
                [dbo].[employee].[family_name],
                [dbo].[employee].[email],
                [dbo].[employee].[job_title],
                [dbo].[employee].[start_date],
                [dbo].[employee].[end_date],
                [dbo].[employee].[department_id])
            VALUES ( 
                @Id,
                @GivenName,
                @FamilyName,
                @Email,
                @JobTitle,
                @StartDate,
                @EndDate,
                @DepartmentId) ";

        public override string UpdateSql => @"
            UPDATE [dbo].[employee] 
            SET [dbo].[employee].[given_name]=@GivenName,
                [dbo].[employee].[family_name]=@FamilyName,
                [dbo].[employee].[email]=@Email,
                [dbo].[employee].[job_title]=@JobTitle,
                [dbo].[employee].[start_date]=@StartDate,
                [dbo].[employee].[end_date]=@EndDate,
                [dbo].[employee].[department_id]=@DepartmentId
            WHERE [dbo].[employee].[employee_id]=@Id ";

        public override string SelectSql => @"
            SELECT [dbo].[employee].[employee_id],
                   [dbo].[employee].[given_name],
                   [dbo].[employee].[family_name],
                   [dbo].[employee].[email],
                   [dbo].[employee].[job_title],
                   [dbo].[employee].[start_date],
                   [dbo].[employee].[end_date],
                   [dbo].[employee].[department_id]
            FROM [dbo].[employee] ";

        public override ESC2.Module.System.Data.DataObjects.Employee ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.Employee();
            obj.Id = row.GetGuid("employee_id");
            obj.GivenName = row.GetString("given_name");
            obj.FamilyName = row.GetString("family_name");
            obj.Email = row.GetString("email");
            obj.JobTitle = row.GetString("job_title");
            obj.StartDate = row.GetDateTime("start_date");
            obj.EndDate = row.GetNullableDateTime("end_date");
            obj.DepartmentId = row.GetGuid("department_id");
            return obj;
        }

        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.Employee obj)
        {
            List<DbQueryParameter> parameters = new List<DbQueryParameter>();
            parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("GivenName", obj.GivenName, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("FamilyName", obj.FamilyName, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Email", obj.Email, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("JobTitle", obj.JobTitle, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("StartDate", obj.StartDate, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("EndDate", obj.EndDate, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("DepartmentId", obj.DepartmentId, DbQueryParameterType.Guid));

            return parameters;
        }
    }
}
