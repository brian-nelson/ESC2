using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named AssetHistoryRepo.cs
namespace ESC2.Module.System.Data.Repos.Operational
{
    public partial class AssetHistoryRepo : AbstractDataRepo<ESC2.Module.System.Data.DataObjects.Operational.AssetHistory, Guid>
    {
        public AssetHistoryRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "operational";
        public override string TableName => "asset_history";

        public override string InsertSql => @"
            INSERT INTO [operational].[asset_history] (
                [operational].[asset_history].[asset_history_id],
                [operational].[asset_history].[action_date],
                [operational].[asset_history].[action],
                [operational].[asset_history].[user_id],
                [operational].[asset_history].[asset_id])
            VALUES ( 
                @Id,
                @ActionDate,
                @Action,
                @UserId,
                @AssetId) ";

        public override string UpdateSql => @"
            UPDATE [operational].[asset_history] 
            SET [operational].[asset_history].[action_date]=@ActionDate,
                [operational].[asset_history].[action]=@Action,
                [operational].[asset_history].[user_id]=@UserId,
                [operational].[asset_history].[asset_id]=@AssetId
            WHERE [operational].[asset_history].[asset_history_id]=@Id ";

        public override string SelectSql => @"
            SELECT [operational].[asset_history].[asset_history_id],
                   [operational].[asset_history].[action_date],
                   [operational].[asset_history].[action],
                   [operational].[asset_history].[user_id],
                   [operational].[asset_history].[asset_id]
            FROM [operational].[asset_history] ";

        public override string DeleteSql => @"DELETE FROM [operational].[asset_history] WHERE [operational].[asset_history].[asset_history_id] = @Id";

        public override string GetByIdSql => $@"{SelectSql} WHERE [operational].[asset_history].[asset_history_id = @Id";
        public override ESC2.Module.System.Data.DataObjects.Operational.AssetHistory ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.Operational.AssetHistory();
            obj.Id = row.GetGuid("asset_history_id");
            obj.ActionDate = row.GetDateTime("action_date");
            obj.Action = row.GetString("action");
            obj.UserId = row.GetGuid("user_id");
            obj.AssetId = row.GetGuid("asset_id");
            return obj;
        }

        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.Operational.AssetHistory obj)
        {
            List<DbQueryParameter> parameters = new List<DbQueryParameter>();
            parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("ActionDate", obj.ActionDate, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("Action", obj.Action, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("UserId", obj.UserId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("AssetId", obj.AssetId, DbQueryParameterType.Guid));

            return parameters;
        }
    }
}
