using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named ImplementationRuleRepo.cs
namespace ESC2.Module.System.Data.Repos.Operational
{
    public partial class ImplementationRuleRepo : AbstractDataRepo<ESC2.Module.System.Data.DataObjects.Operational.ImplementationRule, Guid>
    {
        public ImplementationRuleRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "operational";
        public override string TableName => "implementation_rule";

        public override string InsertSql => @"
            INSERT INTO [operational].[implementation_rule] (
                [operational].[implementation_rule].[implementation_rule_id],
                [operational].[implementation_rule].[status],
                [operational].[implementation_rule].[finding_details],
                [operational].[implementation_rule].[comments],
                [operational].[implementation_rule].[severity_override],
                [operational].[implementation_rule].[severity_justification],
                [operational].[implementation_rule].[adjustment_set_id],
                [operational].[implementation_rule].[rule_id],
                [operational].[implementation_rule].[evidence_set_id],
                [operational].[implementation_rule].[implementation_id],
                [operational].[implementation_rule].[created_by_id],
                [operational].[implementation_rule].[created_on],
                [operational].[implementation_rule].[last_modified_by_id],
                [operational].[implementation_rule].[last_modified_on])
            VALUES ( 
                @Id,
                @Status,
                @FindingDetails,
                @Comments,
                @SeverityOverride,
                @SeverityJustification,
                @AdjustmentSetId,
                @RuleId,
                @EvidenceSetId,
                @ImplementationId,
                @CreatedById,
                @CreatedOn,
                @LastModifiedById,
                @LastModifiedOn) ";

        public override string UpdateSql => @"
            UPDATE [operational].[implementation_rule] 
            SET [operational].[implementation_rule].[status]=@Status,
                [operational].[implementation_rule].[finding_details]=@FindingDetails,
                [operational].[implementation_rule].[comments]=@Comments,
                [operational].[implementation_rule].[severity_override]=@SeverityOverride,
                [operational].[implementation_rule].[severity_justification]=@SeverityJustification,
                [operational].[implementation_rule].[adjustment_set_id]=@AdjustmentSetId,
                [operational].[implementation_rule].[rule_id]=@RuleId,
                [operational].[implementation_rule].[evidence_set_id]=@EvidenceSetId,
                [operational].[implementation_rule].[implementation_id]=@ImplementationId,
                [operational].[implementation_rule].[created_by_id]=@CreatedById,
                [operational].[implementation_rule].[created_on]=@CreatedOn,
                [operational].[implementation_rule].[last_modified_by_id]=@LastModifiedById,
                [operational].[implementation_rule].[last_modified_on]=@LastModifiedOn
            WHERE [operational].[implementation_rule].[implementation_rule_id]=@Id ";

        public override string SelectSql => @"
            SELECT [operational].[implementation_rule].[implementation_rule_id],
                   [operational].[implementation_rule].[status],
                   [operational].[implementation_rule].[finding_details],
                   [operational].[implementation_rule].[comments],
                   [operational].[implementation_rule].[severity_override],
                   [operational].[implementation_rule].[severity_justification],
                   [operational].[implementation_rule].[adjustment_set_id],
                   [operational].[implementation_rule].[rule_id],
                   [operational].[implementation_rule].[evidence_set_id],
                   [operational].[implementation_rule].[implementation_id],
                   [operational].[implementation_rule].[created_by_id],
                   [operational].[implementation_rule].[created_on],
                   [operational].[implementation_rule].[last_modified_by_id],
                   [operational].[implementation_rule].[last_modified_on]
            FROM [operational].[implementation_rule] ";

        public override string DeleteSql => @"DELETE FROM [operational].[implementation_rule] WHERE [operational].[implementation_rule].[implementation_rule_id] = @Id";

        public override string GetByIdSql => $@"{SelectSql} WHERE [operational].[implementation_rule].[implementation_rule_id = @Id";
        public override ESC2.Module.System.Data.DataObjects.Operational.ImplementationRule ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.Operational.ImplementationRule();
            obj.Id = row.GetGuid("implementation_rule_id");
            obj.Status = row.GetString("status");
            obj.FindingDetails = row.GetString("finding_details");
            obj.Comments = row.GetString("comments");
            obj.SeverityOverride = row.GetString("severity_override");
            obj.SeverityJustification = row.GetString("severity_justification");
            obj.AdjustmentSetId = row.GetNullableGuid("adjustment_set_id");
            obj.RuleId = row.GetGuid("rule_id");
            obj.EvidenceSetId = row.GetNullableGuid("evidence_set_id");
            obj.ImplementationId = row.GetGuid("implementation_id");
            obj.CreatedById = row.GetGuid("created_by_id");
            obj.CreatedOn = row.GetDateTime("created_on");
            obj.LastModifiedById = row.GetGuid("last_modified_by_id");
            obj.LastModifiedOn = row.GetDateTime("last_modified_on");
            return obj;
        }

        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.Operational.ImplementationRule obj)
        {
            List<DbQueryParameter> parameters = new List<DbQueryParameter>();
            parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("Status", obj.Status, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("FindingDetails", obj.FindingDetails, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Comments", obj.Comments, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("SeverityOverride", obj.SeverityOverride, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("SeverityJustification", obj.SeverityJustification, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("AdjustmentSetId", obj.AdjustmentSetId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("RuleId", obj.RuleId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("EvidenceSetId", obj.EvidenceSetId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("ImplementationId", obj.ImplementationId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("CreatedById", obj.CreatedById, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("CreatedOn", obj.CreatedOn, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("LastModifiedById", obj.LastModifiedById, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("LastModifiedOn", obj.LastModifiedOn, DbQueryParameterType.DateTime));

            return parameters;
        }
    }
}
