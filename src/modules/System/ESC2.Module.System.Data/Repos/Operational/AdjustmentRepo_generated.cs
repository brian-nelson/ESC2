using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named AdjustmentRepo.cs
namespace ESC2.Module.System.Data.Repos.Operational
{
    public partial class AdjustmentRepo : AbstractDataRepo<ESC2.Module.System.Data.DataObjects.Operational.Adjustment, Guid>
    {
        public AdjustmentRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "operational";
        public override string TableName => "adjustment";

        public override string InsertSql => @"
            INSERT INTO [operational].[adjustment] (
                [operational].[adjustment].[adjustment_id],
                [operational].[adjustment].[type],
                [operational].[adjustment].[details],
                [operational].[adjustment].[adjustment_set_id],
                [operational].[adjustment].[created_by_id],
                [operational].[adjustment].[created_on],
                [operational].[adjustment].[last_modified_by_id],
                [operational].[adjustment].[last_modified_on])
            VALUES ( 
                @Id,
                @Type,
                @Details,
                @AdjustmentSetId,
                @CreatedById,
                @CreatedOn,
                @LastModifiedById,
                @LastModifiedOn) ";

        public override string UpdateSql => @"
            UPDATE [operational].[adjustment] 
            SET [operational].[adjustment].[type]=@Type,
                [operational].[adjustment].[details]=@Details,
                [operational].[adjustment].[adjustment_set_id]=@AdjustmentSetId,
                [operational].[adjustment].[created_by_id]=@CreatedById,
                [operational].[adjustment].[created_on]=@CreatedOn,
                [operational].[adjustment].[last_modified_by_id]=@LastModifiedById,
                [operational].[adjustment].[last_modified_on]=@LastModifiedOn
            WHERE [operational].[adjustment].[adjustment_id]=@Id ";

        public override string SelectSql => @"
            SELECT [operational].[adjustment].[adjustment_id],
                   [operational].[adjustment].[type],
                   [operational].[adjustment].[details],
                   [operational].[adjustment].[adjustment_set_id],
                   [operational].[adjustment].[created_by_id],
                   [operational].[adjustment].[created_on],
                   [operational].[adjustment].[last_modified_by_id],
                   [operational].[adjustment].[last_modified_on]
            FROM [operational].[adjustment] ";

        public override string DeleteSql => @"DELETE FROM [operational].[adjustment] WHERE [operational].[adjustment].[adjustment_id] = @Id";

        public override string GetByIdSql => $@"{SelectSql} WHERE [operational].[adjustment].[adjustment_id = @Id";
        public override ESC2.Module.System.Data.DataObjects.Operational.Adjustment ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.Operational.Adjustment();
            obj.Id = row.GetGuid("adjustment_id");
            obj.Type = row.GetString("type");
            obj.Details = row.GetString("details");
            obj.AdjustmentSetId = row.GetGuid("adjustment_set_id");
            obj.CreatedById = row.GetGuid("created_by_id");
            obj.CreatedOn = row.GetDateTime("created_on");
            obj.LastModifiedById = row.GetGuid("last_modified_by_id");
            obj.LastModifiedOn = row.GetDateTime("last_modified_on");
            return obj;
        }

        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.Operational.Adjustment obj)
        {
            List<DbQueryParameter> parameters = new List<DbQueryParameter>();
            parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("Type", obj.Type, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Details", obj.Details, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("AdjustmentSetId", obj.AdjustmentSetId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("CreatedById", obj.CreatedById, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("CreatedOn", obj.CreatedOn, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("LastModifiedById", obj.LastModifiedById, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("LastModifiedOn", obj.LastModifiedOn, DbQueryParameterType.DateTime));

            return parameters;
        }
    }
}
