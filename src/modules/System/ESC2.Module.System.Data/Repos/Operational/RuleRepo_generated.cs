using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named RuleRepo.cs
namespace ESC2.Module.System.Data.Repos.Operational
{
    public partial class RuleRepo : AbstractDataRepo<ESC2.Module.System.Data.DataObjects.Operational.Rule, Guid>
    {
        public RuleRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "operational";
        public override string TableName => "rule";

        public override string InsertSql => @"
            INSERT INTO [operational].[rule] (
                [operational].[rule].[rule_id],
                [operational].[rule].[number],
                [operational].[rule].[severity],
                [operational].[rule].[version],
                [operational].[rule].[title],
                [operational].[rule].[discussion],
                [operational].[rule].[fix],
                [operational].[rule].[check],
                [operational].[rule].[cci],
                [operational].[rule].[version_id],
                [operational].[rule].[created_by_id],
                [operational].[rule].[created_on],
                [operational].[rule].[last_modified_by_id],
                [operational].[rule].[last_modified_on])
            VALUES ( 
                @Id,
                @Number,
                @Severity,
                @Version,
                @Title,
                @Discussion,
                @Fix,
                @Check,
                @Cci,
                @VersionId,
                @CreatedById,
                @CreatedOn,
                @LastModifiedById,
                @LastModifiedOn) ";

        public override string UpdateSql => @"
            UPDATE [operational].[rule] 
            SET [operational].[rule].[number]=@Number,
                [operational].[rule].[severity]=@Severity,
                [operational].[rule].[version]=@Version,
                [operational].[rule].[title]=@Title,
                [operational].[rule].[discussion]=@Discussion,
                [operational].[rule].[fix]=@Fix,
                [operational].[rule].[check]=@Check,
                [operational].[rule].[cci]=@Cci,
                [operational].[rule].[version_id]=@VersionId,
                [operational].[rule].[created_by_id]=@CreatedById,
                [operational].[rule].[created_on]=@CreatedOn,
                [operational].[rule].[last_modified_by_id]=@LastModifiedById,
                [operational].[rule].[last_modified_on]=@LastModifiedOn
            WHERE [operational].[rule].[rule_id]=@Id ";

        public override string SelectSql => @"
            SELECT [operational].[rule].[rule_id],
                   [operational].[rule].[number],
                   [operational].[rule].[severity],
                   [operational].[rule].[version],
                   [operational].[rule].[title],
                   [operational].[rule].[discussion],
                   [operational].[rule].[fix],
                   [operational].[rule].[check],
                   [operational].[rule].[cci],
                   [operational].[rule].[version_id],
                   [operational].[rule].[created_by_id],
                   [operational].[rule].[created_on],
                   [operational].[rule].[last_modified_by_id],
                   [operational].[rule].[last_modified_on]
            FROM [operational].[rule] ";

        public override string DeleteSql => @"DELETE FROM [operational].[rule] WHERE [operational].[rule].[rule_id] = @Id";

        public override string GetByIdSql => $@"{SelectSql} WHERE [operational].[rule].[rule_id = @Id";
        public override ESC2.Module.System.Data.DataObjects.Operational.Rule ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.Operational.Rule();
            obj.Id = row.GetGuid("rule_id");
            obj.Number = row.GetString("number");
            obj.Severity = row.GetString("severity");
            obj.Version = row.GetString("version");
            obj.Title = row.GetString("title");
            obj.Discussion = row.GetString("discussion");
            obj.Fix = row.GetString("fix");
            obj.Check = row.GetString("check");
            obj.Cci = row.GetString("cci");
            obj.VersionId = row.GetGuid("version_id");
            obj.CreatedById = row.GetGuid("created_by_id");
            obj.CreatedOn = row.GetDateTime("created_on");
            obj.LastModifiedById = row.GetGuid("last_modified_by_id");
            obj.LastModifiedOn = row.GetDateTime("last_modified_on");
            return obj;
        }

        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.Operational.Rule obj)
        {
            List<DbQueryParameter> parameters = new List<DbQueryParameter>();
            parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("Number", obj.Number, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Severity", obj.Severity, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Version", obj.Version, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Title", obj.Title, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Discussion", obj.Discussion, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Fix", obj.Fix, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Check", obj.Check, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Cci", obj.Cci, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("VersionId", obj.VersionId, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("CreatedById", obj.CreatedById, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("CreatedOn", obj.CreatedOn, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("LastModifiedById", obj.LastModifiedById, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("LastModifiedOn", obj.LastModifiedOn, DbQueryParameterType.DateTime));

            return parameters;
        }
    }
}
