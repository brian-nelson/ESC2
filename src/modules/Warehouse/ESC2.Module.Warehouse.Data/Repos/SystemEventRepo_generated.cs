using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.Repos;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named SystemEventRepo.cs
namespace ESC2.Module.System.Data.Repos
{
    public partial class SystemEventRepo : AbstractIdentityRepo<ESC2.Module.System.Data.DataObjects.SystemEvent>
    {
        public SystemEventRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "dbo";
        public override string TableName => "system_event";

        public override string InsertSql => @"
            INSERT INTO [dbo].[system_event] (
                [dbo].[system_event].[SystemEventId],
                [dbo].[system_event].[CustomerId],
                [dbo].[system_event].[ReceivedAt],
                [dbo].[system_event].[DeviceReportedTime],
                [dbo].[system_event].[Facility],
                [dbo].[system_event].[Priority],
                [dbo].[system_event].[FromHost],
                [dbo].[system_event].[Message],
                [dbo].[system_event].[NtSeverity],
                [dbo].[system_event].[Importance],
                [dbo].[system_event].[EventSource],
                [dbo].[system_event].[EventUser],
                [dbo].[system_event].[EventCategory],
                [dbo].[system_event].[EventId],
                [dbo].[system_event].[EventBinaryData],
                [dbo].[system_event].[MaximumAvailable],
                [dbo].[system_event].[CurrentUsage],
                [dbo].[system_event].[MinimumUsage],
                [dbo].[system_event].[MaximumUsage],
                [dbo].[system_event].[InfoUnitId],
                [dbo].[system_event].[SysLogTag],
                [dbo].[system_event].[EventLogType],
                [dbo].[system_event].[GenericFileName],
                [dbo].[system_event].[SystemId])
            VALUES ( 
                @Id,
                @CustomerId,
                @ReceivedAt,
                @DeviceReportedTime,
                @Facility,
                @Priority,
                @FromHost,
                @Message,
                @NtSeverity,
                @Importance,
                @EventSource,
                @EventUser,
                @EventCategory,
                @EventId,
                @EventBinaryData,
                @MaximumAvailable,
                @CurrentUsage,
                @MinimumUsage,
                @MaximumUsage,
                @InfoUnitId,
                @SysLogTag,
                @EventLogType,
                @GenericFileName,
                @SystemId) ";

        public override string UpdateSql => @"
            UPDATE [dbo].[system_event] 
            SET [dbo].[system_event].[customer_id]=@CustomerId,
                [dbo].[system_event].[received_at]=@ReceivedAt,
                [dbo].[system_event].[device_reported_time]=@DeviceReportedTime,
                [dbo].[system_event].[facility]=@Facility,
                [dbo].[system_event].[priority]=@Priority,
                [dbo].[system_event].[from_host]=@FromHost,
                [dbo].[system_event].[message]=@Message,
                [dbo].[system_event].[nt_severity]=@NtSeverity,
                [dbo].[system_event].[importance]=@Importance,
                [dbo].[system_event].[event_source]=@EventSource,
                [dbo].[system_event].[event_user]=@EventUser,
                [dbo].[system_event].[event_category]=@EventCategory,
                [dbo].[system_event].[event_id]=@EventId,
                [dbo].[system_event].[event_binary_data]=@EventBinaryData,
                [dbo].[system_event].[maximum_available]=@MaximumAvailable,
                [dbo].[system_event].[current_usage]=@CurrentUsage,
                [dbo].[system_event].[minimum_usage]=@MinimumUsage,
                [dbo].[system_event].[maximum_usage]=@MaximumUsage,
                [dbo].[system_event].[info_unit_id]=@InfoUnitId,
                [dbo].[system_event].[sys_log_tag]=@SysLogTag,
                [dbo].[system_event].[event_log_type]=@EventLogType,
                [dbo].[system_event].[generic_file_name]=@GenericFileName,
                [dbo].[system_event].[system_id]=@SystemId
            WHERE [dbo].[system_event].[system_event_id]=@Id ";

        public override string SelectSql => @"
            SELECT [dbo].[system_event].[system_event_id],
                   [dbo].[system_event].[customer_id],
                   [dbo].[system_event].[received_at],
                   [dbo].[system_event].[device_reported_time],
                   [dbo].[system_event].[facility],
                   [dbo].[system_event].[priority],
                   [dbo].[system_event].[from_host],
                   [dbo].[system_event].[message],
                   [dbo].[system_event].[nt_severity],
                   [dbo].[system_event].[importance],
                   [dbo].[system_event].[event_source],
                   [dbo].[system_event].[event_user],
                   [dbo].[system_event].[event_category],
                   [dbo].[system_event].[event_id],
                   [dbo].[system_event].[event_binary_data],
                   [dbo].[system_event].[maximum_available],
                   [dbo].[system_event].[current_usage],
                   [dbo].[system_event].[minimum_usage],
                   [dbo].[system_event].[maximum_usage],
                   [dbo].[system_event].[info_unit_id],
                   [dbo].[system_event].[sys_log_tag],
                   [dbo].[system_event].[event_log_type],
                   [dbo].[system_event].[generic_file_name],
                   [dbo].[system_event].[system_id]
            FROM [dbo].[system_event] ";

        public override ESC2.Module.System.Data.DataObjects.SystemEvent ToObject(DataRow row)
        {
            var obj = new ESC2.Module.System.Data.DataObjects.SystemEvent();
            obj.Id = row.GetLong("system_event_id");
            obj.CustomerId = row.GetNullableLong("customer_id");
            obj.ReceivedAt = row.GetNullableDateTime("received_at");
            obj.DeviceReportedTime = row.GetNullableDateTime("device_reported_time");
            obj.Facility = row.GetNullableShort("facility");
            obj.Priority = row.GetNullableShort("priority");
            obj.FromHost = row.GetString("from_host");
            obj.Message = row.GetString("message");
            obj.NtSeverity = row.GetNullableInt("nt_severity");
            obj.Importance = row.GetNullableInt("importance");
            obj.EventSource = row.GetString("event_source");
            obj.EventUser = row.GetString("event_user");
            obj.EventCategory = row.GetNullableInt("event_category");
            obj.EventId = row.GetNullableInt("event_id");
            obj.EventBinaryData = row.GetString("event_binary_data");
            obj.MaximumAvailable = row.GetNullableInt("maximum_available");
            obj.CurrentUsage = row.GetNullableInt("current_usage");
            obj.MinimumUsage = row.GetNullableInt("minimum_usage");
            obj.MaximumUsage = row.GetNullableInt("maximum_usage");
            obj.InfoUnitId = row.GetNullableInt("info_unit_id");
            obj.SysLogTag = row.GetString("sys_log_tag");
            obj.EventLogType = row.GetString("event_log_type");
            obj.GenericFileName = row.GetString("generic_file_name");
            obj.SystemId = row.GetNullableInt("system_id");
            return obj;
        }

        public override List<DbQueryParameter> ToParameters(ESC2.Module.System.Data.DataObjects.SystemEvent obj)
        {
            List<DbQueryParameter> parameters = new List<DbQueryParameter>();
            parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
            parameters.Add(new DbQueryParameter("CustomerId", obj.CustomerId, DbQueryParameterType.Int64));
            parameters.Add(new DbQueryParameter("ReceivedAt", obj.ReceivedAt, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("DeviceReportedTime", obj.DeviceReportedTime, DbQueryParameterType.DateTime));
            parameters.Add(new DbQueryParameter("Facility", obj.Facility, DbQueryParameterType.Int16));
            parameters.Add(new DbQueryParameter("Priority", obj.Priority, DbQueryParameterType.Int16));
            parameters.Add(new DbQueryParameter("FromHost", obj.FromHost, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("Message", obj.Message, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("NtSeverity", obj.NtSeverity, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("Importance", obj.Importance, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("EventSource", obj.EventSource, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("EventUser", obj.EventUser, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("EventCategory", obj.EventCategory, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("EventId", obj.EventId, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("EventBinaryData", obj.EventBinaryData, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("MaximumAvailable", obj.MaximumAvailable, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("CurrentUsage", obj.CurrentUsage, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("MinimumUsage", obj.MinimumUsage, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("MaximumUsage", obj.MaximumUsage, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("InfoUnitId", obj.InfoUnitId, DbQueryParameterType.Int32));
            parameters.Add(new DbQueryParameter("SysLogTag", obj.SysLogTag, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("EventLogType", obj.EventLogType, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("GenericFileName", obj.GenericFileName, DbQueryParameterType.String));
            parameters.Add(new DbQueryParameter("SystemId", obj.SystemId, DbQueryParameterType.Int32));

            return parameters;
        }
    }
}
