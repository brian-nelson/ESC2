using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.DataObjects;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named AuditRuleRepo.cs
namespace ESC2.Library.Data.Repos
{
    public partial class AuditRuleRepo : AbstractGuidRepo<ESC2.Library.Data.DataObjects.AuditRule>
    {
        public AuditRuleRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "dbo";
        public override string TableName => "audit_rule";

        public override string InsertSql => @"
            INSERT INTO [dbo].[audit_rule] (
                [dbo].[audit_rule].[AuditRuleId],
                [dbo].[audit_rule].[Comment],
                [dbo].[audit_rule].[Status],
                [dbo].[audit_rule].[RuleId],
                [dbo].[audit_rule].[AuditId],
                [dbo].[audit_rule].[CreatedOn],
                [dbo].[audit_rule].[LastModifiedOn],
                [dbo].[audit_rule].[EvidenceSetId])
            VALUES ( 
                @Id,
                @Comment,
                @Status,
                @RuleId,
                @AuditId,
                @CreatedOn,
                @LastModifiedOn,
                @EvidenceSetId) ";

        public override string UpdateSql => @"
            UPDATE [dbo].[audit_rule] 
            SET [dbo].[audit_rule].[comment]=@Comment,
                [dbo].[audit_rule].[status]=@Status,
                [dbo].[audit_rule].[rule_id]=@RuleId,
                [dbo].[audit_rule].[audit_id]=@AuditId,
                [dbo].[audit_rule].[created_on]=@CreatedOn,
                [dbo].[audit_rule].[last_modified_on]=@LastModifiedOn,
                [dbo].[audit_rule].[evidence_set_id]=@EvidenceSetId
            WHERE [dbo].[audit_rule].[audit_rule_id]=@Id ";

        public override string SelectSql => @"
            SELECT [dbo].[audit_rule].[audit_rule_id],
                   [dbo].[audit_rule].[comment],
                   [dbo].[audit_rule].[status],
                   [dbo].[audit_rule].[rule_id],
                   [dbo].[audit_rule].[audit_id],
                   [dbo].[audit_rule].[created_on],
                   [dbo].[audit_rule].[last_modified_on],
                   [dbo].[audit_rule].[evidence_set_id]
            FROM [dbo].[audit_rule] ";

        public override ESC2.Library.Data.DataObjects.AuditRule ToObject(DataRow row)
        {
            var obj = new ESC2.Library.Data.DataObjects.AuditRule();
            obj.Id = row.GetGuid("audit_rule_id");
            obj.Comment = row.GetString("comment");
            obj.Status = row.GetString("status");
            obj.RuleId = row.GetGuid("rule_id");
            obj.AuditId = row.GetGuid("audit_id");
            obj.CreatedOn = row.GetDateTime("created_on");
            obj.LastModifiedOn = row.GetDateTime("last_modified_on");
            obj.EvidenceSetId = row.GetGuid("evidence_set_id");
            return obj;
        }


        public override List<DbQueryParameter> ToParameters(ESC2.Library.Data.DataObjects.AuditRule obj)
         {
             List<DbQueryParameter> parameters = new List<DbQueryParameter>();
             parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
             parameters.Add(new DbQueryParameter("Comment", obj.Comment, DbQueryParameterType.String));
             parameters.Add(new DbQueryParameter("Status", obj.Status, DbQueryParameterType.String));
             parameters.Add(new DbQueryParameter("RuleId", obj.RuleId, DbQueryParameterType.Guid));
             parameters.Add(new DbQueryParameter("AuditId", obj.AuditId, DbQueryParameterType.Guid));
             parameters.Add(new DbQueryParameter("CreatedOn", obj.CreatedOn, DbQueryParameterType.DateTime));
             parameters.Add(new DbQueryParameter("LastModifiedOn", obj.LastModifiedOn, DbQueryParameterType.DateTime));
             parameters.Add(new DbQueryParameter("EvidenceSetId", obj.EvidenceSetId, DbQueryParameterType.Guid));

             return parameters;
         }


    }
}
