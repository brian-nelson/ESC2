using System;
using System.Collections.Generic;
using System.Data;
using ESC2.Library.Data.Constants;
using ESC2.Library.Data.DataObjects;
using ESC2.Library.Data.Helpers;
using ESC2.Library.Data.Interfaces;
using ESC2.Library.Data.Objects;

// This file is generated from the database.  Do not manually edit.
// Generated by: https://github.com/brian-nelson/repo-generator
// To extend the class beyond a POCO, create a additional partial class
// named StigRepo.cs
namespace ESC2.Library.Data.Repos
{
    public partial class StigRepo : AbstractGuidRepo<ESC2.Library.Data.DataObjects.Stig>
    {
        public StigRepo(IDataProvider dataProvider)
             : base(dataProvider)
        {
        }

        public override string SchemaName => "dbo";
        public override string TableName => "stig";

        public override string InsertSql => @"
            INSERT INTO [dbo].[stig] (
                [dbo].[stig].[StigId],
                [dbo].[stig].[Number])
            VALUES ( 
                @Id,
                @Number) ";

        public override string UpdateSql => @"
            UPDATE [dbo].[stig] 
            SET [dbo].[stig].[number]=@Number
            WHERE [dbo].[stig].[stig_id]=@Id ";

        public override string SelectSql => @"
            SELECT [dbo].[stig].[stig_id],
                   [dbo].[stig].[number]
            FROM [dbo].[stig] ";

        public override ESC2.Library.Data.DataObjects.Stig ToObject(DataRow row)
        {
            var obj = new ESC2.Library.Data.DataObjects.Stig();
            obj.Id = row.GetGuid("stig_id");
            obj.Number = row.GetString("number");
            return obj;
        }


        public override List<DbQueryParameter> ToParameters(ESC2.Library.Data.DataObjects.Stig obj)
         {
             List<DbQueryParameter> parameters = new List<DbQueryParameter>();
             parameters.Add(new DbQueryParameter("Id", obj.Id, DbQueryParameterType.Guid));
             parameters.Add(new DbQueryParameter("Number", obj.Number, DbQueryParameterType.String));

             return parameters;
         }


    }
}
